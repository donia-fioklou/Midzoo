# Generated by Django 4.2 on 2023-04-08 18:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomizeUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(choices=[('M', 'Masculin'), ('F', 'Feminin')], max_length=30, verbose_name='Genre')),
                ('adress', models.CharField(max_length=30, verbose_name='Adresse')),
                ('phone', models.CharField(max_length=30, verbose_name='Téléphone')),
                ('birth_date', models.DateField(verbose_name='Date de naissance')),
                ('photo_profile', models.ImageField(upload_to='images/', verbose_name='Image')),
                ('school_name', models.CharField(max_length=30, verbose_name="Nom de l'école")),
                ('user_type', models.CharField(choices=[('PASSAGER', 'Passager'), ('CONDUCTEUR', 'Conducteur')], max_length=30, verbose_name="Type d'utilisateur")),
                ('id_card', models.ImageField(upload_to='images/', verbose_name="Carte d'identité")),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_point', models.CharField(max_length=30, verbose_name='Point de départ')),
                ('start_point_latitude', models.FloatField(verbose_name='Latitude du point de départ')),
                ('start_point_longitude', models.FloatField(verbose_name='Longitude du point de départ')),
                ('end_point', models.CharField(max_length=30, verbose_name="Point d'arrivée")),
                ('end_point_latitude', models.FloatField(verbose_name="Latitude du point d'arrivée")),
                ('end_point_longitude', models.FloatField(verbose_name="Longitude du point d'arrivée")),
                ('departure_date', models.DateField(verbose_name='Date')),
                ('departure_time', models.TimeField(verbose_name='Heure')),
                ('arrival_date', models.DateField(verbose_name='Date')),
                ('arrival_time', models.TimeField(verbose_name='Heure')),
                ('number_places', models.IntegerField(verbose_name='Nombre de places')),
                ('active_path', models.BooleanField(default=True, verbose_name='Trajet actif')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Créateur')),
            ],
        ),
        migrations.CreateModel(
            name='Engine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_type', models.CharField(choices=[('VOITURE', 'Voiture'), ('MOTO', 'Moto')], max_length=30, verbose_name='Type de moteur')),
                ('mark', models.CharField(max_length=30, verbose_name='Marque')),
                ('model', models.CharField(max_length=30, verbose_name='Modèle')),
                ('Immatriculation', models.CharField(max_length=30, verbose_name='Immatriculation')),
                ('image', models.ImageField(upload_to='images/', verbose_name='Image')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Propriétaire')),
            ],
        ),
    ]
